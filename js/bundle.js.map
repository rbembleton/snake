{"version":3,"sources":["webpack/bootstrap 50ae2e06bd238b42c297","./js/main.js","./js/board.js","./js/snake.js","./js/snake_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACxBD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,kBAAkB;AACnC;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,gCAAgC;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;;;AC1DA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,kBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;;ACnDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,4BAA4B;AAC7C;AACA,oBAAmB,+BAA+B;AAClD,gDAA+C,MAAM;AACrD;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAsB;AACtB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;;AAGH;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA,mBAAkB,QAAQ;AAC1B;AACA,qBAAoB,QAAQ;AAC5B,qBAAoB,QAAQ;AAC5B;AACA,IAAG;;AAEH;AACA,iBAAgB,SAAS;;AAEzB;AACA,mBAAkB,SAAS;AAC3B;AACA;AACA;AACA;;AAEA,sCAAqC,6BAA6B;AAClE,0CAAyC,6BAA6B;;AAEtE,uBAAsB,WAAW;AACjC,4BAA2B,eAAe;;AAE1C;;AAEA;AACA;;AAEA,mBAAkB,WAAW;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 50ae2e06bd238b42c297\n **/","var Board = require('./board.js');\nvar Snake = require('./snake.js');\nvar SnakeView = require('./snake_view.js');\n\n// $( () => {\n//   console.log(\"goo0d work you\");\n//   var $rootEl = $('.snake-container');\n//   var board = new Board();\n//   var view = new SnakeView(board, $rootEl);\n//   view.run();\n//   // var $rootEl = $('.hanoi');\n//   // var game = new HanoiGame();\n//   // new HanoiView(game, $rootEl);\n// });\n\n$( function () {\n  console.log(\"goo0d work you\");\n  var $rootEl = $('.snake-container');\n  var board = new Board();\n  var view = new SnakeView(board, $rootEl);\n  view.run();\n  // var $rootEl = $('.hanoi');\n  // var game = new HanoiGame();\n  // new HanoiView(game, $rootEl);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 1\n ** module chunks = 0\n **/","var Snake = require('./snake.js');\n\nfunction Board() {\n  this.snake = new Snake([15,15]);\n  this.grid = [[]];\n  this.apple = [];\n  this.gWidth = 30;\n  this.gHeight = 30;\n  this.isKilled = false;\n  this.createGrid();\n  this.objId = Math.floor(Math.random()*1000);\n}\n\nBoard.prototype.createGrid = function () {\n  for (var i = 0; i < this.gHeight; i++) {\n    this.grid[i] = [];\n    for (var j = 0; j < this.gWidth; j++) {\n      this.grid[i][j] = 0;\n    }\n  }\n  this.placeApple();\n};\n\nBoard.prototype.placeApple = function () {\n  var randX = Math.floor(this.grid.length * Math.random());\n  var randY = Math.floor(this.grid[0].length * Math.random());\n  // this.apples.push([randX, randY]);\n  this.apple = [randX, randY];\n\n};\n\nBoard.prototype.eatApple = function (applePos) {\n  // debugger\n  // this.apples.splice(this.apples.findIndex(applePos));\n  this.snake.eatApple();\n  this.placeApple();\n};\n\nBoard.prototype.isOver = function () {\n  // console.log(this.snake.pos());\n  if (this.snake.pos()[0] < 0 || this.snake.pos()[0] >= this.gWidth ||\n      this.snake.pos()[1] < 0 || this.snake.pos()[1] >= this.gHeight) {\n        // console.log('hi');\n        this.isKilled = true;\n        return true;\n  }\n\n  for (var i = 1; i < this.snake.segments.length; i++) {\n    if (this.snake.segments[i][0] === this.snake.pos()[0] &&\n        this.snake.segments[i][1] === this.snake.pos()[1]) {\n        this.isKilled = true;\n        return true;\n    }\n  }\n\n};\n\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/board.js\n ** module id = 2\n ** module chunks = 0\n **/","const Board = require('./board.js');\n\nfunction Snake (pos) {\n  this.direction = \"W\";\n  this.segments = [];\n  // this.pos = this.getPos;\n  this.snakeLength = 5; // last element of snake is a tail removing style\n  this.buildSnake(pos);\n}\n\nSnake.prototype.move = function () {\n  switch (this.direction) {\n    case \"N\":\n      this.segments.unshift([this.segments[0][0] - 1, this.segments[0][1]]);\n      break;\n    case \"W\":\n      this.segments.unshift([this.segments[0][0], this.segments[0][1] - 1]);\n      break;\n    case \"E\":\n      this.segments.unshift([this.segments[0][0], this.segments[0][1] + 1]);\n      break;\n    case \"S\":\n      this.segments.unshift([this.segments[0][0] + 1, this.segments[0][1]]);\n      break;\n  }\n  this.segments.pop();\n};\n\nSnake.prototype.pos = function () {\n  return this.segments[0];\n};\n\n\nSnake.prototype.buildSnake = function (pos) {\n  for (var i = 0; i < this.snakeLength; i++) {\n    this.segments.push([pos[0], pos[1] + i]);\n  }\n};\n\nSnake.prototype.turn = function (dir) {\n  this.direction = dir;\n};\n\nSnake.prototype.eatApple = function () {\n  this.segments.push(this.segments[this.snakeLength - 1]);\n  this.snakeLength += 1;\n};\n\n\nSnake.DIRECTIONS = [\"N\", \"E\", \"S\", \"W\"];\n\nmodule.exports = Snake;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 3\n ** module chunks = 0\n **/","var Board = require('./board.js');\nvar Snake = require('./snake.js');\n\nfunction SnakeView (board, $rootEl) {\n  this.board = board;\n  this.$rootEl = $rootEl;\n  this.score = 0;\n  this.setupDisplay();\n  this.bindKeys();\n  this.currentSpeed = 500;\n  this.ourTimeout;\n  this.highScore = 0;\n}\n\nSnakeView.prototype.setupDisplay = function () {\n  for (var i = 0; i < this.board.grid.length; i++) {\n    var ul = this.$rootEl.append('<ul class=\"row\"></ul>');\n    for (var j = 0; j < this.board.grid[i].length; j++) {\n      $(ul).append(`<li class=\"square\" pos=\"[${[i,j]}]\"></li>`);\n    }\n  }\n  $('body').append('<figure class=\"score\"></figure>');\n  $('body').append('<figure class=\"high-score\"></figure>');\n  // $('body').append('<figure class=\"new-game\">New Game</figure>');\n  $('body').append('<figure class=\"new-game\">â†»</figure>');\n\n\n  this.render();\n};\n\nSnakeView.prototype.raiseSpeed = function () {\n  this.currentSpeed = Math.floor(this.currentSpeed * 0.80);\n  // console.log(this.currentSpeed);\n};\n\nSnakeView.prototype.bindKeys = function () {\n\n  var that = this;\n  var thisSnake = this.board.snake;\n  $(document).keydown( function(e) {\n    switch(e.which) {\n      case 37: // left\n      thisSnake.turn(\"W\");\n      thisSnake.move();\n      break;\n\n      case 38: // up\n      thisSnake.turn(\"N\");\n      thisSnake.move();\n      break;\n\n      case 39: // right\n      thisSnake.turn(\"E\");\n      thisSnake.move();\n      break;\n\n      case 40: // down\n      thisSnake.turn(\"S\");\n      thisSnake.move();\n      break;\n\n      default: return; // exit this handler for other keys\n    }\n    e.preventDefault();\n    that.render();\n  });\n\n  $('.new-game').on(\"click\", function(event) {\n    that.newGame();\n  });\n\n\n};\n\nSnakeView.prototype.run = function () {\n  if (this.board.isOver()) {\n    this.endGame();\n  } else if (this.board.isKilled === true) {\n    this.newGame();\n    //this is a sepatate call to kill the board.\n  } else {\n    // var callback = this.turn.bind(this);\n    // window.setTimeout(callback, this.currentSpeed);\n    var callback = this.turn.bind(this);\n    var currSpeed = this.currentSpeed;\n    this.ourTimeout = window.setTimeout(callback, currSpeed);\n  }\n};\n\nSnakeView.prototype.turn = function () {\n  this.board.snake.move();\n  // this.score++;\n  this.render();\n  this.run();\n};\n\n\nSnakeView.prototype.render = function () {\n\n  var currSnake = this.board.snake;\n  var currBoard = this.board;\n\n  $('.tail').removeClass('tail');\n\n  currSnake.segments.forEach( function(linkPos, idx) {\n    $(`li[pos='[${linkPos}]']`).addClass('snake');\n    if (idx === currSnake.segments.length - 1) {\n      $(`li[pos='[${linkPos}]']`).removeClass('snake');\n      $(`li[pos='[${linkPos}]']`).addClass('tail');\n    }\n  });\n\n  var applePos = this.board.apple;\n  $(`li[pos='[${applePos}]']`).addClass('apple');\n\n  if (applePos[0] === currSnake.pos()[0] && applePos[1] === currSnake.pos()[1]) {\n    $(`li[pos='[${applePos}]']`).removeClass('apple');\n    this.score += ((501 - this.currentSpeed) * 2);\n    this.raiseSpeed();\n    currBoard.eatApple(applePos);\n  }\n\n  if (this.highScore === undefined) { this.highScore = this.score; }\n  else if (this.score > this.highScore) { this.highScore = this.score; }\n\n  $('.score').text(`${this.score}`);\n  $('.high-score').text(`${this.highScore}`);\n\n};\n\nSnakeView.prototype.endGame = function () {\n  $(document).unbind('keydown');\n\n  alert(`Score: ${this.score}`);\n  console.log(this.board.objId);\n  $('.score').addClass(`final-score`);\n};\n\nSnakeView.prototype.newGame = function () {\n  $('.score').remove();\n  $('.new-game').remove();\n  $('.high-score').remove();\n  $('.snake-container').empty();\n  this.board.isKilled = true;\n  window.clearTimeout(this.ourTimeout);\n  this.ourTimeout = null;\n\n\n  this.board = null;\n  this.board = new Board();\n  this.score = 0;\n  this.setupDisplay();\n  this.bindKeys();\n  this.currentSpeed = 500;\n  this.run();\n};\n\nmodule.exports = SnakeView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake_view.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}